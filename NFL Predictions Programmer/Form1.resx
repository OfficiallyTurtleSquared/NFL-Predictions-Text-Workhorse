<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIB0AAAEAIAAcDwAAFgAAACgAAAAgAAAAOgAAAAEAIAAAAAAAgA4AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADIAAABcAAAAXAAAAFwAAABcAAAAXAAAAFwAAABcAAAAXAAAAFwAAABWAAAAEQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAiggICP8VFRX+FRUT/hUVE/4VFRP+FRUU/hYVFf4WFRX+EhER/wICAu4AAAAvAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAA
        ACAAAAAgAAAAIAAAAAkAAAB4Hh0d60xKUP9PTWX/T01n/09NZv9MSlT/S0lJ/0tKSv8/Pj77BwcH0gAA
        ACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAsAAAANAAAADQAA
        AA0MDAxODg4O3g4ODuIODg7eDAwMTwAAABYJCAhyEhA6/yki0v8rI93/KyPc/xgVY/8MCxH/CwsL+wsL
        C9AFBQUtAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZAQAAsAEB
        AccAAADHAAABx0dHR9nCwsL/xcXF/8LCwv9ISEjZAQEBWQAAAFwIBjb/Ihvj/yUd7/8lHe7/IBnQ/w8M
        Y/8AAADFAAAAMwAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAoK
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAAAA/AAAAVQAAAOcuLi7/Pj4+/z4+Pv82NjbGAAAAOAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAUwAAAGAAAABgAAAAYAAA
        AEIQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA///////w
        AP//8AD//gAA/8AAAP/AAAH/gAAD/4AAA/+AAAg/wAAAH8AAAAfAAAADwAAAA4AAAAGAAAABgAAAAYAA
        AAGAAAABwAAAA+AAAH/4AAB//gAAf//AAH//wAB//+AAf//wAP//+AH///4H//////8=
</value>
  </data>
</root>